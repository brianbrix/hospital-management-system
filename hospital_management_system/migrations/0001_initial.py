# Generated by Django 3.0.9 on 2020-08-04 12:56

from django.db import migrations, models
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='Users',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('firstname', models.CharField(blank=True, db_column='firstName', max_length=255, null=True)),
                ('lastname', models.CharField(blank=True, db_column='lastName', max_length=255, null=True)),
                ('address', models.CharField(blank=True, max_length=255, null=True)),
                ('city', models.CharField(blank=True, max_length=255, null=True)),
                ('gender', models.CharField(blank=True, max_length=255, null=True)),
                ('user_email', models.CharField(blank=True, max_length=255, null=True, unique=True)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
                ('regdate', models.DateTimeField(blank=True, db_column='regDate', default=django.utils.timezone.now, null=True)),
                ('updationdate', models.DateTimeField(blank=True, db_column='updationDate', null=True)),
                ('users_ptr', models.CharField(default=False, max_length=100)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'users',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('username', models.CharField(max_length=255)),
                ('password', models.CharField(max_length=255)),
                ('updationdate', models.CharField(db_column='updationDate', max_length=255)),
            ],
            options={
                'db_table': 'admin',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('doctorspecialization', models.CharField(blank=True, db_column='doctorSpecialization', max_length=255, null=True)),
                ('doctorid', models.IntegerField(blank=True, db_column='doctorId', null=True)),
                ('userid', models.IntegerField(blank=True, db_column='userId', null=True)),
                ('consultancyfees', models.IntegerField(blank=True, db_column='consultancyFees', null=True)),
                ('appointmentdate', models.CharField(blank=True, db_column='appointmentDate', max_length=255, null=True)),
                ('appointmenttime', models.CharField(blank=True, db_column='appointmentTime', max_length=255, null=True)),
                ('postingdate', models.DateTimeField(blank=True, db_column='postingDate', null=True)),
                ('userstatus', models.IntegerField(blank=True, db_column='userStatus', null=True)),
                ('doctorstatus', models.IntegerField(blank=True, db_column='doctorStatus', null=True)),
                ('updationdate', models.DateTimeField(blank=True, db_column='updationDate', null=True)),
                ('doc_notes', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'appointment',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Doctorslog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.IntegerField(blank=True, null=True)),
                ('username', models.CharField(blank=True, max_length=255, null=True)),
                ('userip', models.CharField(blank=True, max_length=16, null=True)),
                ('logintime', models.DateTimeField(blank=True, db_column='loginTime', null=True)),
                ('logout', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'doctorslog',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Doctorspecilization',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('specilization', models.CharField(blank=True, max_length=255, null=True)),
                ('creationdate', models.DateTimeField(blank=True, db_column='creationDate', null=True)),
                ('updationdate', models.DateTimeField(blank=True, db_column='updationDate', null=True)),
            ],
            options={
                'db_table': 'doctorspecilization',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Tblcontactus',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fullname', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('contactno', models.BigIntegerField(blank=True, null=True)),
                ('msg_subject', models.CharField(max_length=100)),
                ('message', models.TextField(blank=True, null=True)),
                ('postingdate', models.DateTimeField(blank=True, db_column='PostingDate', null=True)),
                ('adminremark', models.TextField(blank=True, db_column='AdminRemark', null=True)),
                ('lastupdationdate', models.DateTimeField(blank=True, db_column='LastupdationDate', null=True)),
                ('isread', models.IntegerField(blank=True, db_column='IsRead', null=True)),
            ],
            options={
                'db_table': 'tblcontactus',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Tblmedicalhistory',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('patientid', models.IntegerField(blank=True, db_column='PatientID', null=True)),
                ('bloodpressure', models.CharField(blank=True, db_column='BloodPressure', max_length=200, null=True)),
                ('bloodsugar', models.CharField(db_column='BloodSugar', max_length=200)),
                ('weight', models.CharField(blank=True, db_column='Weight', max_length=100, null=True)),
                ('temperature', models.CharField(blank=True, db_column='Temperature', max_length=200, null=True)),
                ('medicalpres', models.TextField(blank=True, db_column='MedicalPres', null=True)),
                ('creationdate', models.DateTimeField(db_column='CreationDate')),
            ],
            options={
                'db_table': 'tblmedicalhistory',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Tblpatient',
            fields=[
                ('id', models.AutoField(db_column='ID', primary_key=True, serialize=False)),
                ('docid', models.IntegerField(blank=True, db_column='Docid', null=True)),
                ('patientname', models.CharField(blank=True, db_column='PatientName', max_length=200, null=True)),
                ('patientcontno', models.BigIntegerField(blank=True, db_column='PatientContno', null=True)),
                ('patientemail', models.CharField(blank=True, db_column='PatientEmail', max_length=200, null=True)),
                ('patientgender', models.CharField(blank=True, db_column='PatientGender', max_length=50, null=True)),
                ('patientadd', models.TextField(blank=True, db_column='PatientAdd', null=True)),
                ('patientage', models.IntegerField(blank=True, db_column='PatientAge', null=True)),
                ('patientmedhis', models.TextField(blank=True, db_column='PatientMedhis', null=True)),
                ('creationdate', models.DateTimeField(blank=True, db_column='CreationDate', null=True)),
                ('updationdate', models.DateTimeField(blank=True, db_column='UpdationDate', null=True)),
            ],
            options={
                'db_table': 'tblpatient',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Userlog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('uid', models.IntegerField(blank=True, null=True)),
                ('username', models.CharField(blank=True, max_length=255, null=True)),
                ('userip', models.CharField(blank=True, max_length=16, null=True)),
                ('logintime', models.DateTimeField(blank=True, db_column='loginTime', null=True)),
                ('logout', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.IntegerField(blank=True, null=True)),
            ],
            options={
                'db_table': 'userlog',
                'managed': True,
            },
        ),
        migrations.CreateModel(
            name='Doctors',
            fields=[
                ('specialization', models.CharField(blank=True, default='Doc', max_length=255, null=True)),
                ('doctorname', models.CharField(blank=True, db_column='doctorName', max_length=255, null=True)),
                ('docfees', models.CharField(blank=True, db_column='docFees', max_length=255, null=True)),
                ('contactno', models.BigIntegerField(blank=True, null=True)),
                ('creationdate', models.DateTimeField(blank=True, db_column='creationDate', default=django.utils.timezone.now, null=True)),
            ],
            options={
                'db_table': 'doctors',
                'managed': True,
            },
            bases=('hospital_management_system.users', models.Model),
        ),
    ]
